import camion.*
import cosas.*

describe "El Camión" {
    method initialize() {
        camion.cosas().clear()
    }
    
    test "Carga y Descarga" {
        camion.cargar(bumblebee)
        assert.equals(#{bumblebee}, camion.cosas())
        camion.cargar(knightRider)
        assert.equals(#{bumblebee, knightRider}, camion.cosas())
        camion.descargar(bumblebee)
        assert.equals(#{knightRider}, camion.cosas())
        assert.throwsException({camion.cargar(knightRider)})
        assert.throwsException({camion.descargar(bumblebee)})
    }
    test "Todo Peso Par" {
        camion.cargar(arenaGranel)
        arenaGranel.peso(50)
        camion.cargar(bumblebee)
        assert.that(camion.esTodoPesoPar())
        arenaGranel.peso(51)
        assert.notThat(camion.esTodoPesoPar())
    }
    test "Hay Algo Con Peso" {
        camion.cargar(bumblebee)
        camion.cargar(arenaGranel)
        arenaGranel.peso(50)
        assert.that(camion.hayAlgoConPeso(50))
        assert.that(camion.hayAlgoConPeso(800))
        assert.notThat(camion.hayAlgoConPeso(500))
    }
    test "Peso y Exceso de Peso" {
        camion.cargar(bumblebee)
        camion.cargar(paqueteLadrillos)
        paqueteLadrillos.cantidadLadrillos(300)
        assert.equals(2400, camion.pesoTotal())
        assert.notThat(camion.estaExcedidoDePeso())
        paqueteLadrillos.cantidadLadrillos(400)
        assert.equals(2600, camion.pesoTotal())
        assert.that(camion.estaExcedidoDePeso())
    }
    test "Es de nivel" {
        camion.cargar(bumblebee)
        bumblebee.estaTransformadoenRobot(false)
        camion.cargar(bateriaAntiaerea)
        bateriaAntiaerea.tieneMisilesCargados(false)
        camion.cargar(residuosRadiactivos)
        assert.equals(bateriaAntiaerea, camion.encontrarCosaDeNivel(0))
        assert.equals(bumblebee, camion.encontrarCosaDeNivel(15))
        assert.equals(residuosRadiactivos, camion.encontrarCosaDeNivel(200))
        assert.throwsException({ camion.encontrarCosaDeNivel(30) } )
        bumblebee.estaTransformadoenRobot(true)
        assert.equals(bumblebee, camion.encontrarCosaDeNivel(30))
        bateriaAntiaerea.tieneMisilesCargados(true)
        assert.equals(bateriaAntiaerea, camion.encontrarCosaDeNivel(100))
    }
    test "Cosas peligrosas" {
        camion.cargar(knightRider)
        camion.cargar(bateriaAntiaerea)
        bateriaAntiaerea.tieneMisilesCargados(true)
        assert.equals(#{bateriaAntiaerea}, camion.cosasQueSuperenNivelPeligrosidad(15))
        assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))
        assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasQueSuperenNivelPeligrosidad(2))
        assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(arenaGranel))
        assert.equals(#{}, camion.cosasQueSuperenNivelPeligrosidad(200))
        assert.equals(#{}, camion.cosasMasPeligrosasQue(residuosRadiactivos))
    }
    test "Puede circular en ruta" {
        camion.cargar(bumblebee)
        bumblebee.estaTransformadoenRobot(false)
        camion.cargar(paqueteLadrillos)
        paqueteLadrillos.cantidadLadrillos(300)
        assert.that(camion.puedeCircularEnRutaDeNivel(20))
        paqueteLadrillos.cantidadLadrillos(400)
        assert.notThat(camion.puedeCircularEnRutaDeNivel(20))
        paqueteLadrillos.cantidadLadrillos(300)
        bumblebee.estaTransformadoenRobot(true)
        assert.notThat(camion.puedeCircularEnRutaDeNivel(20))
    }
    test "Más cosas" {
        contenedorPortuario.cosasCargadas().clear()
        assert.equals(100, contenedorPortuario.peso())
        assert.equals(0, contenedorPortuario.nivelPeligrosidad())
        contenedorPortuario.cosasCargadas().add(arenaGranel)
        arenaGranel.peso(50)
        contenedorPortuario.cosasCargadas().add(knightRider)
        assert.equals(650, contenedorPortuario.peso())
        assert.equals(10, contenedorPortuario.nivelPeligrosidad())
        embalajeSeguridad.cosaEnvuelta(knightRider)
        assert.equals(500, embalajeSeguridad.peso())
        assert.equals(5, embalajeSeguridad.nivelPeligrosidad())
        embalajeSeguridad.cosaEnvuelta(bumblebee)
        bumblebee.estaTransformadoenRobot(false)
        assert.equals(800, embalajeSeguridad.peso())
        assert.equals(7.5, embalajeSeguridad.nivelPeligrosidad())
    }
    test "Tiene algo que pesa entre dos valores" {
        camion.cargar(bumblebee)
        camion.cargar(paqueteLadrillos)
        paqueteLadrillos.cantidadLadrillos(300)
        assert.that(camion.tieneAlgoQuePesaEntre(5, 700))
        assert.that(camion.tieneAlgoQuePesaEntre(5, 1000))
        assert.notThat(camion.tieneAlgoQuePesaEntre(900, 1000))
    }
    test "Cosa más pesada" {
        camion.cargar(bumblebee)
        camion.cargar(paqueteLadrillos)
        paqueteLadrillos.cantidadLadrillos(300)
        assert.equals(#{bumblebee}, #{camion.cosaMasPesada()})
        camion.cosas().clear()
        assert.throwsException({ camion.cosaMasPesada() })
    }
}